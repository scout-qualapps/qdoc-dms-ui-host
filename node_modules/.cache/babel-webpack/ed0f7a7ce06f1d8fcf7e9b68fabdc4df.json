{"ast":null,"code":"import { SelectionModel } from '@angular/cdk/collections';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { ShareModalComponent } from 'src/app/shared/share-modal/share-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/a11y\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/table\";\nimport * as i4 from \"@angular/material/sort\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/checkbox\";\n\nfunction FolderSharingComponent_th_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"th\", 19);\n    i0.ɵɵelementStart(1, \"mat-checkbox\", 20);\n    i0.ɵɵlistener(\"change\", function FolderSharingComponent_th_4_Template_mat_checkbox_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return $event ? ctx_r10.masterToggle() : null;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", ctx_r0.selection.hasValue() && ctx_r0.isAllSelected())(\"indeterminate\", ctx_r0.selection.hasValue() && !ctx_r0.isAllSelected());\n  }\n}\n\nfunction FolderSharingComponent_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 21);\n    i0.ɵɵelementStart(1, \"mat-checkbox\", 22);\n    i0.ɵɵlistener(\"click\", function FolderSharingComponent_td_5_Template_mat_checkbox_click_1_listener($event) {\n      return $event.stopPropagation();\n    })(\"change\", function FolderSharingComponent_td_5_Template_mat_checkbox_change_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const element_r12 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return $event ? ctx_r14.selection.toggle(element_r12) : null;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r12 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", ctx_r1.selection.isSelected(element_r12));\n  }\n}\n\nfunction FolderSharingComponent_th_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 23);\n    i0.ɵɵtext(1, \" User Name \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FolderSharingComponent_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r16 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r16.name, \" \");\n  }\n}\n\nfunction FolderSharingComponent_th_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 25);\n    i0.ɵɵtext(1, \" Effective From \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FolderSharingComponent_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r17 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r17.effectivefrom, \" \");\n  }\n}\n\nfunction FolderSharingComponent_th_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 26);\n    i0.ɵɵtext(1, \" Effective To \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FolderSharingComponent_td_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r18 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r18.effectiveto, \" \");\n  }\n}\n\nfunction FolderSharingComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 27);\n  }\n}\n\nfunction FolderSharingComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 28);\n    i0.ɵɵlistener(\"click\", function FolderSharingComponent_tr_16_Template_tr_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r21);\n      const row_r19 = restoredCtx.$implicit;\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.selection.toggle(row_r19);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst ELEMENT_DATA = [{\n  position: 1,\n  checkbox: '',\n  name: 'Kutti, Nuni',\n  effectivefrom: ' 01/05/2022 3:30 PM',\n  effectiveto: '01/05/2022 3:30 PM'\n}, {\n  position: 2,\n  checkbox: '',\n  name: 'Ani, Joshph',\n  effectivefrom: ' 01/05/2022 3:30 PM',\n  effectiveto: '01/05/2022 3:30 PM'\n}, {\n  position: 3,\n  checkbox: '',\n  name: 'Anil, Kumar',\n  effectivefrom: ' 01/05/2022 3:30 PM',\n  effectiveto: '01/05/2022 3:30 PM'\n}, {\n  position: 4,\n  checkbox: '',\n  name: 'Lal, Joshe',\n  effectivefrom: ' 01/05/2022 3:30 PM',\n  effectiveto: '01/05/2022 3:30 PM'\n}];\nexport let FolderSharingComponent = /*#__PURE__*/(() => {\n  class FolderSharingComponent {\n    constructor(_liveAnnouncer, dialog) {\n      this._liveAnnouncer = _liveAnnouncer;\n      this.dialog = dialog;\n      this.displayedColumns = ['checkbox', 'name', 'effectivefrom', 'effectiveto'];\n      this.dataSource = new MatTableDataSource(ELEMENT_DATA);\n      this.selection = new SelectionModel(true, []);\n    }\n\n    isAllSelected() {\n      const numSelected = this.selection.selected.length;\n      const numRows = this.dataSource.data.length;\n      return numSelected === numRows;\n    }\n\n    masterToggle() {\n      if (this.isAllSelected()) {\n        this.selection.clear();\n        return;\n      }\n\n      this.selection.select(...this.dataSource.data);\n    }\n    /** The label for the checkbox on the passed row */\n\n\n    checkboxLabel(row) {\n      if (!row) {\n        return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n      }\n\n      return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n    }\n\n    openShareDialog() {\n      const dialogRef = this.dialog.open(ShareModalComponent, {\n        panelClass: 'custon-width-md'\n      });\n      dialogRef.afterClosed().subscribe(result => {});\n    }\n\n    ngAfterViewInit() {\n      this.dataSource.sort = this.sort;\n    }\n\n    ngOnInit() {}\n\n    announceSortChange(sortState) {\n      if (sortState.direction) {\n        this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\n      } else {\n        this._liveAnnouncer.announce('Sorting cleared');\n      }\n    }\n\n  }\n\n  FolderSharingComponent.ɵfac = function FolderSharingComponent_Factory(t) {\n    return new (t || FolderSharingComponent)(i0.ɵɵdirectiveInject(i1.LiveAnnouncer), i0.ɵɵdirectiveInject(i2.MatDialog));\n  };\n\n  FolderSharingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FolderSharingComponent,\n    selectors: [[\"app-folder-sharing\"]],\n    viewQuery: function FolderSharingComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatSort, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n      }\n    },\n    decls: 24,\n    vars: 3,\n    consts: [[1, \"card-body\"], [1, \"table-responsive\", \"row-select-cursor\"], [\"mat-table\", \"\", \"matSort\", \"\", 1, \"mat-table\", \"ellipsis\", \"mat-table-bg-header\", 3, \"dataSource\", \"matSortChange\"], [\"matColumnDef\", \"checkbox\"], [\"style\", \"width:60px\", \"class\", \"text-center\", \"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", \"class\", \"text-center\", 4, \"matCellDef\"], [\"matColumnDef\", \"name\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"style\", \"min-width: 150px;\", \"sortActionDescription\", \"Sort by name\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"effectivefrom\"], [\"style\", \"width: 30%; min-width: 150px;\", \"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"sortActionDescription\", \"Sort by effectivefrom\", 4, \"matHeaderCellDef\"], [\"matColumnDef\", \"effectiveto\"], [\"style\", \"width: 30%; min-width: 150px;\", \"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"sortActionDescription\", \"Sort by effectiveto\", 4, \"matHeaderCellDef\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 3, \"click\", 4, \"matRowDef\", \"matRowDefColumns\"], [1, \"gap-2\", \"xs-btn-group-g-2\", \"mt-3\", \"d-md-flex\", \"justify-content-md-end\"], [\"mat-button\", \"\", 1, \"secondary-button\", \"me-3\", \"me-md-2\"], [\"mat-button\", \"\", 1, \"me-md-2\", \"me-3\", \"secondary-button\", 3, \"click\"], [\"mat-button\", \"\", 1, \"me-md-2\", \"primary-button\", \"me-3\", 3, \"click\"], [\"mat-header-cell\", \"\", 1, \"text-center\", 2, \"width\", \"60px\"], [1, \"b-checkbox\", 3, \"checked\", \"indeterminate\", \"change\"], [\"mat-cell\", \"\", 1, \"text-center\"], [1, \"b-checkbox\", 3, \"checked\", \"click\", \"change\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"sortActionDescription\", \"Sort by name\", 2, \"min-width\", \"150px\"], [\"mat-cell\", \"\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"sortActionDescription\", \"Sort by effectivefrom\", 2, \"width\", \"30%\", \"min-width\", \"150px\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"sortActionDescription\", \"Sort by effectiveto\", 2, \"width\", \"30%\", \"min-width\", \"150px\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\", 3, \"click\"]],\n    template: function FolderSharingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"table\", 2);\n        i0.ɵɵlistener(\"matSortChange\", function FolderSharingComponent_Template_table_matSortChange_2_listener($event) {\n          return ctx.announceSortChange($event);\n        });\n        i0.ɵɵelementContainerStart(3, 3);\n        i0.ɵɵtemplate(4, FolderSharingComponent_th_4_Template, 2, 2, \"th\", 4);\n        i0.ɵɵtemplate(5, FolderSharingComponent_td_5_Template, 2, 1, \"td\", 5);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(6, 6);\n        i0.ɵɵtemplate(7, FolderSharingComponent_th_7_Template, 2, 0, \"th\", 7);\n        i0.ɵɵtemplate(8, FolderSharingComponent_td_8_Template, 2, 1, \"td\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(9, 9);\n        i0.ɵɵtemplate(10, FolderSharingComponent_th_10_Template, 2, 0, \"th\", 10);\n        i0.ɵɵtemplate(11, FolderSharingComponent_td_11_Template, 2, 1, \"td\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(12, 11);\n        i0.ɵɵtemplate(13, FolderSharingComponent_th_13_Template, 2, 0, \"th\", 12);\n        i0.ɵɵtemplate(14, FolderSharingComponent_td_14_Template, 2, 1, \"td\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(15, FolderSharingComponent_tr_15_Template, 1, 0, \"tr\", 13);\n        i0.ɵɵtemplate(16, FolderSharingComponent_tr_16_Template, 1, 0, \"tr\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 15);\n        i0.ɵɵelementStart(18, \"button\", 16);\n        i0.ɵɵtext(19, \"Remove Share\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function FolderSharingComponent_Template_button_click_20_listener() {\n          return ctx.openShareDialog();\n        });\n        i0.ɵɵtext(21, \"Edit Share \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function FolderSharingComponent_Template_button_click_22_listener() {\n          return ctx.openShareDialog();\n        });\n        i0.ɵɵtext(23, \"New Share \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n      }\n    },\n    directives: [i3.MatTable, i4.MatSort, i3.MatColumnDef, i3.MatHeaderCellDef, i3.MatCellDef, i3.MatHeaderRowDef, i3.MatRowDef, i5.MatButton, i3.MatHeaderCell, i6.MatCheckbox, i3.MatCell, i4.MatSortHeader, i3.MatHeaderRow, i3.MatRow],\n    styles: [\"\"]\n  });\n  return FolderSharingComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}